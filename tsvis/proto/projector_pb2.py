# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tsvis/proto/projector.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='tsvis/proto/projector.proto',
  package='tsvis',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1btsvis/proto/projector.proto\x12\x05tsvis\"\xbe\x01\n\x06Tensor\x12\r\n\x05\x64type\x18\x01 \x01(\t\x12/\n\x0ctensor_shape\x18\x02 \x01(\x0b\x32\x19.tsvis.Tensor.TensorShape\x12\x16\n\x0etensor_content\x18\x03 \x01(\x0c\x1a\\\n\x0bTensorShape\x12*\n\x03\x64im\x18\x01 \x03(\x0b\x32\x1d.tsvis.Tensor.TensorShape.Dim\x1a!\n\x03\x44im\x12\x0c\n\x04size\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\"\xc5\x03\n\tProjector\x12/\n\tembedding\x18\x01 \x01(\x0b\x32\x1a.tsvis.Projector.EmbeddingH\x00\x12/\n\texception\x18\x02 \x01(\x0b\x32\x1a.tsvis.Projector.ExceptionH\x00\x1a)\n\tException\x12\x1c\n\x05value\x18\x01 \x01(\x0b\x32\r.tsvis.Tensor\x1a\x9f\x02\n\tEmbedding\x12\x31\n\x06sample\x18\x01 \x01(\x0b\x32!.tsvis.Projector.Embedding.Sample\x12\x1c\n\x05value\x18\x02 \x01(\x0b\x32\r.tsvis.Tensor\x12\x1c\n\x05label\x18\x03 \x01(\x0b\x32\r.tsvis.Tensor\x1a\xa2\x01\n\x06Sample\x12:\n\x04type\x18\x02 \x01(\x0e\x32,.tsvis.Projector.Embedding.Sample.SampleType\x12\x18\n\x01X\x18\x03 \x01(\x0b\x32\r.tsvis.Tensor\"B\n\nSampleType\x12\x14\n\x10TYPE_UNSPECIFIED\x10\x00\x12\t\n\x05\x41UDIO\x10\x01\x12\x08\n\x04TEXT\x10\x02\x12\t\n\x05IMAGE\x10\x03\x42\t\n\x07\x63ontentb\x06proto3'
)



_PROJECTOR_EMBEDDING_SAMPLE_SAMPLETYPE = _descriptor.EnumDescriptor(
  name='SampleType',
  full_name='tsvis.Projector.Embedding.Sample.SampleType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TYPE_UNSPECIFIED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AUDIO', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TEXT', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IMAGE', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=608,
  serialized_end=674,
)
_sym_db.RegisterEnumDescriptor(_PROJECTOR_EMBEDDING_SAMPLE_SAMPLETYPE)


_TENSOR_TENSORSHAPE_DIM = _descriptor.Descriptor(
  name='Dim',
  full_name='tsvis.Tensor.TensorShape.Dim',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='size', full_name='tsvis.Tensor.TensorShape.Dim.size', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='tsvis.Tensor.TensorShape.Dim.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=196,
  serialized_end=229,
)

_TENSOR_TENSORSHAPE = _descriptor.Descriptor(
  name='TensorShape',
  full_name='tsvis.Tensor.TensorShape',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='dim', full_name='tsvis.Tensor.TensorShape.dim', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_TENSOR_TENSORSHAPE_DIM, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=137,
  serialized_end=229,
)

_TENSOR = _descriptor.Descriptor(
  name='Tensor',
  full_name='tsvis.Tensor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='dtype', full_name='tsvis.Tensor.dtype', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tensor_shape', full_name='tsvis.Tensor.tensor_shape', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tensor_content', full_name='tsvis.Tensor.tensor_content', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_TENSOR_TENSORSHAPE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=229,
)


_PROJECTOR_EXCEPTION = _descriptor.Descriptor(
  name='Exception',
  full_name='tsvis.Projector.Exception',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='tsvis.Projector.Exception.value', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=343,
  serialized_end=384,
)

_PROJECTOR_EMBEDDING_SAMPLE = _descriptor.Descriptor(
  name='Sample',
  full_name='tsvis.Projector.Embedding.Sample',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='tsvis.Projector.Embedding.Sample.type', index=0,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='X', full_name='tsvis.Projector.Embedding.Sample.X', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PROJECTOR_EMBEDDING_SAMPLE_SAMPLETYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=512,
  serialized_end=674,
)

_PROJECTOR_EMBEDDING = _descriptor.Descriptor(
  name='Embedding',
  full_name='tsvis.Projector.Embedding',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sample', full_name='tsvis.Projector.Embedding.sample', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='tsvis.Projector.Embedding.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='label', full_name='tsvis.Projector.Embedding.label', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_PROJECTOR_EMBEDDING_SAMPLE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=387,
  serialized_end=674,
)

_PROJECTOR = _descriptor.Descriptor(
  name='Projector',
  full_name='tsvis.Projector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='embedding', full_name='tsvis.Projector.embedding', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='exception', full_name='tsvis.Projector.exception', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_PROJECTOR_EXCEPTION, _PROJECTOR_EMBEDDING, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='content', full_name='tsvis.Projector.content',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=232,
  serialized_end=685,
)

_TENSOR_TENSORSHAPE_DIM.containing_type = _TENSOR_TENSORSHAPE
_TENSOR_TENSORSHAPE.fields_by_name['dim'].message_type = _TENSOR_TENSORSHAPE_DIM
_TENSOR_TENSORSHAPE.containing_type = _TENSOR
_TENSOR.fields_by_name['tensor_shape'].message_type = _TENSOR_TENSORSHAPE
_PROJECTOR_EXCEPTION.fields_by_name['value'].message_type = _TENSOR
_PROJECTOR_EXCEPTION.containing_type = _PROJECTOR
_PROJECTOR_EMBEDDING_SAMPLE.fields_by_name['type'].enum_type = _PROJECTOR_EMBEDDING_SAMPLE_SAMPLETYPE
_PROJECTOR_EMBEDDING_SAMPLE.fields_by_name['X'].message_type = _TENSOR
_PROJECTOR_EMBEDDING_SAMPLE.containing_type = _PROJECTOR_EMBEDDING
_PROJECTOR_EMBEDDING_SAMPLE_SAMPLETYPE.containing_type = _PROJECTOR_EMBEDDING_SAMPLE
_PROJECTOR_EMBEDDING.fields_by_name['sample'].message_type = _PROJECTOR_EMBEDDING_SAMPLE
_PROJECTOR_EMBEDDING.fields_by_name['value'].message_type = _TENSOR
_PROJECTOR_EMBEDDING.fields_by_name['label'].message_type = _TENSOR
_PROJECTOR_EMBEDDING.containing_type = _PROJECTOR
_PROJECTOR.fields_by_name['embedding'].message_type = _PROJECTOR_EMBEDDING
_PROJECTOR.fields_by_name['exception'].message_type = _PROJECTOR_EXCEPTION
_PROJECTOR.oneofs_by_name['content'].fields.append(
  _PROJECTOR.fields_by_name['embedding'])
_PROJECTOR.fields_by_name['embedding'].containing_oneof = _PROJECTOR.oneofs_by_name['content']
_PROJECTOR.oneofs_by_name['content'].fields.append(
  _PROJECTOR.fields_by_name['exception'])
_PROJECTOR.fields_by_name['exception'].containing_oneof = _PROJECTOR.oneofs_by_name['content']
DESCRIPTOR.message_types_by_name['Tensor'] = _TENSOR
DESCRIPTOR.message_types_by_name['Projector'] = _PROJECTOR
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Tensor = _reflection.GeneratedProtocolMessageType('Tensor', (_message.Message,), {

  'TensorShape' : _reflection.GeneratedProtocolMessageType('TensorShape', (_message.Message,), {

    'Dim' : _reflection.GeneratedProtocolMessageType('Dim', (_message.Message,), {
      'DESCRIPTOR' : _TENSOR_TENSORSHAPE_DIM,
      '__module__' : 'tsvis.proto.projector_pb2'
      # @@protoc_insertion_point(class_scope:tsvis.Tensor.TensorShape.Dim)
      })
    ,
    'DESCRIPTOR' : _TENSOR_TENSORSHAPE,
    '__module__' : 'tsvis.proto.projector_pb2'
    # @@protoc_insertion_point(class_scope:tsvis.Tensor.TensorShape)
    })
  ,
  'DESCRIPTOR' : _TENSOR,
  '__module__' : 'tsvis.proto.projector_pb2'
  # @@protoc_insertion_point(class_scope:tsvis.Tensor)
  })
_sym_db.RegisterMessage(Tensor)
_sym_db.RegisterMessage(Tensor.TensorShape)
_sym_db.RegisterMessage(Tensor.TensorShape.Dim)

Projector = _reflection.GeneratedProtocolMessageType('Projector', (_message.Message,), {

  'Exception' : _reflection.GeneratedProtocolMessageType('Exception', (_message.Message,), {
    'DESCRIPTOR' : _PROJECTOR_EXCEPTION,
    '__module__' : 'tsvis.proto.projector_pb2'
    # @@protoc_insertion_point(class_scope:tsvis.Projector.Exception)
    })
  ,

  'Embedding' : _reflection.GeneratedProtocolMessageType('Embedding', (_message.Message,), {

    'Sample' : _reflection.GeneratedProtocolMessageType('Sample', (_message.Message,), {
      'DESCRIPTOR' : _PROJECTOR_EMBEDDING_SAMPLE,
      '__module__' : 'tsvis.proto.projector_pb2'
      # @@protoc_insertion_point(class_scope:tsvis.Projector.Embedding.Sample)
      })
    ,
    'DESCRIPTOR' : _PROJECTOR_EMBEDDING,
    '__module__' : 'tsvis.proto.projector_pb2'
    # @@protoc_insertion_point(class_scope:tsvis.Projector.Embedding)
    })
  ,
  'DESCRIPTOR' : _PROJECTOR,
  '__module__' : 'tsvis.proto.projector_pb2'
  # @@protoc_insertion_point(class_scope:tsvis.Projector)
  })
_sym_db.RegisterMessage(Projector)
_sym_db.RegisterMessage(Projector.Exception)
_sym_db.RegisterMessage(Projector.Embedding)
_sym_db.RegisterMessage(Projector.Embedding.Sample)


# @@protoc_insertion_point(module_scope)
